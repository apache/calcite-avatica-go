// Code generated by protoc-gen-go.
// source: requests.proto
// DO NOT EDIT!

package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Request for Meta#getCatalogs()
type CatalogsRequest struct {
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
}

func (m *CatalogsRequest) Reset()                    { *m = CatalogsRequest{} }
func (m *CatalogsRequest) String() string            { return proto.CompactTextString(m) }
func (*CatalogsRequest) ProtoMessage()               {}
func (*CatalogsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// Request for Meta#getDatabaseProperties()
type DatabasePropertyRequest struct {
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
}

func (m *DatabasePropertyRequest) Reset()                    { *m = DatabasePropertyRequest{} }
func (m *DatabasePropertyRequest) String() string            { return proto.CompactTextString(m) }
func (*DatabasePropertyRequest) ProtoMessage()               {}
func (*DatabasePropertyRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

// Request for Meta#getSchemas(String, org.apache.calcite.avatica.Meta.Pat)}
type SchemasRequest struct {
	Catalog       string `protobuf:"bytes,1,opt,name=catalog" json:"catalog,omitempty"`
	SchemaPattern string `protobuf:"bytes,2,opt,name=schema_pattern,json=schemaPattern" json:"schema_pattern,omitempty"`
	ConnectionId  string `protobuf:"bytes,3,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
}

func (m *SchemasRequest) Reset()                    { *m = SchemasRequest{} }
func (m *SchemasRequest) String() string            { return proto.CompactTextString(m) }
func (*SchemasRequest) ProtoMessage()               {}
func (*SchemasRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

// Request for Request for Meta#getTables(String, org.apache.calcite.avatica.Meta.Pat,
//   org.apache.calcite.avatica.Meta.Pat, java.util.List)
type TablesRequest struct {
	Catalog          string   `protobuf:"bytes,1,opt,name=catalog" json:"catalog,omitempty"`
	SchemaPattern    string   `protobuf:"bytes,2,opt,name=schema_pattern,json=schemaPattern" json:"schema_pattern,omitempty"`
	TableNamePattern string   `protobuf:"bytes,3,opt,name=table_name_pattern,json=tableNamePattern" json:"table_name_pattern,omitempty"`
	TypeList         []string `protobuf:"bytes,4,rep,name=type_list,json=typeList" json:"type_list,omitempty"`
	HasTypeList      bool     `protobuf:"varint,6,opt,name=has_type_list,json=hasTypeList" json:"has_type_list,omitempty"`
	ConnectionId     string   `protobuf:"bytes,7,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
}

func (m *TablesRequest) Reset()                    { *m = TablesRequest{} }
func (m *TablesRequest) String() string            { return proto.CompactTextString(m) }
func (*TablesRequest) ProtoMessage()               {}
func (*TablesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

// Request for Meta#getTableTypes()
type TableTypesRequest struct {
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
}

func (m *TableTypesRequest) Reset()                    { *m = TableTypesRequest{} }
func (m *TableTypesRequest) String() string            { return proto.CompactTextString(m) }
func (*TableTypesRequest) ProtoMessage()               {}
func (*TableTypesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

// Request for Meta#getColumns(String, org.apache.calcite.avatica.Meta.Pat,
//   org.apache.calcite.avatica.Meta.Pat, org.apache.calcite.avatica.Meta.Pat).
type ColumnsRequest struct {
	Catalog           string `protobuf:"bytes,1,opt,name=catalog" json:"catalog,omitempty"`
	SchemaPattern     string `protobuf:"bytes,2,opt,name=schema_pattern,json=schemaPattern" json:"schema_pattern,omitempty"`
	TableNamePattern  string `protobuf:"bytes,3,opt,name=table_name_pattern,json=tableNamePattern" json:"table_name_pattern,omitempty"`
	ColumnNamePattern string `protobuf:"bytes,4,opt,name=column_name_pattern,json=columnNamePattern" json:"column_name_pattern,omitempty"`
	ConnectionId      string `protobuf:"bytes,5,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
}

func (m *ColumnsRequest) Reset()                    { *m = ColumnsRequest{} }
func (m *ColumnsRequest) String() string            { return proto.CompactTextString(m) }
func (*ColumnsRequest) ProtoMessage()               {}
func (*ColumnsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

// Request for Meta#getTypeInfo()
type TypeInfoRequest struct {
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
}

func (m *TypeInfoRequest) Reset()                    { *m = TypeInfoRequest{} }
func (m *TypeInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*TypeInfoRequest) ProtoMessage()               {}
func (*TypeInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

// Request for Meta#prepareAndExecute(Meta.StatementHandle, String, long, Meta.PrepareCallback)
type PrepareAndExecuteRequest struct {
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	Sql          string `protobuf:"bytes,2,opt,name=sql" json:"sql,omitempty"`
	MaxRowCount  uint64 `protobuf:"varint,3,opt,name=max_row_count,json=maxRowCount" json:"max_row_count,omitempty"`
	StatementId  uint32 `protobuf:"varint,4,opt,name=statement_id,json=statementId" json:"statement_id,omitempty"`
}

func (m *PrepareAndExecuteRequest) Reset()                    { *m = PrepareAndExecuteRequest{} }
func (m *PrepareAndExecuteRequest) String() string            { return proto.CompactTextString(m) }
func (*PrepareAndExecuteRequest) ProtoMessage()               {}
func (*PrepareAndExecuteRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

// Request for Meta.prepare(Meta.ConnectionHandle, String, long)
type PrepareRequest struct {
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	Sql          string `protobuf:"bytes,2,opt,name=sql" json:"sql,omitempty"`
	MaxRowCount  uint64 `protobuf:"varint,3,opt,name=max_row_count,json=maxRowCount" json:"max_row_count,omitempty"`
}

func (m *PrepareRequest) Reset()                    { *m = PrepareRequest{} }
func (m *PrepareRequest) String() string            { return proto.CompactTextString(m) }
func (*PrepareRequest) ProtoMessage()               {}
func (*PrepareRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

// Request for Meta#fetch(Meta.StatementHandle, List, long, int)
type FetchRequest struct {
	ConnectionId     string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	StatementId      uint32 `protobuf:"varint,2,opt,name=statement_id,json=statementId" json:"statement_id,omitempty"`
	Offset           uint64 `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	FetchMaxRowCount uint32 `protobuf:"varint,4,opt,name=fetch_max_row_count,json=fetchMaxRowCount" json:"fetch_max_row_count,omitempty"`
}

func (m *FetchRequest) Reset()                    { *m = FetchRequest{} }
func (m *FetchRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchRequest) ProtoMessage()               {}
func (*FetchRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

// Request for Meta#createStatement(Meta.ConnectionHandle)
type CreateStatementRequest struct {
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
}

func (m *CreateStatementRequest) Reset()                    { *m = CreateStatementRequest{} }
func (m *CreateStatementRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateStatementRequest) ProtoMessage()               {}
func (*CreateStatementRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

// Request for Meta#closeStatement(Meta.StatementHandle)
type CloseStatementRequest struct {
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	StatementId  uint32 `protobuf:"varint,2,opt,name=statement_id,json=statementId" json:"statement_id,omitempty"`
}

func (m *CloseStatementRequest) Reset()                    { *m = CloseStatementRequest{} }
func (m *CloseStatementRequest) String() string            { return proto.CompactTextString(m) }
func (*CloseStatementRequest) ProtoMessage()               {}
func (*CloseStatementRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

// Request for Meta#openConnection(Meta.ConnectionHandle, Map<String, String>)
type OpenConnectionRequest struct {
	ConnectionId string            `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	Info         map[string]string `protobuf:"bytes,2,rep,name=info" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *OpenConnectionRequest) Reset()                    { *m = OpenConnectionRequest{} }
func (m *OpenConnectionRequest) String() string            { return proto.CompactTextString(m) }
func (*OpenConnectionRequest) ProtoMessage()               {}
func (*OpenConnectionRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *OpenConnectionRequest) GetInfo() map[string]string {
	if m != nil {
		return m.Info
	}
	return nil
}

// Request for Meta#closeConnection(Meta.ConnectionHandle)
type CloseConnectionRequest struct {
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
}

func (m *CloseConnectionRequest) Reset()                    { *m = CloseConnectionRequest{} }
func (m *CloseConnectionRequest) String() string            { return proto.CompactTextString(m) }
func (*CloseConnectionRequest) ProtoMessage()               {}
func (*CloseConnectionRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

type ConnectionSyncRequest struct {
	ConnectionId string                `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	ConnProps    *ConnectionProperties `protobuf:"bytes,2,opt,name=conn_props,json=connProps" json:"conn_props,omitempty"`
}

func (m *ConnectionSyncRequest) Reset()                    { *m = ConnectionSyncRequest{} }
func (m *ConnectionSyncRequest) String() string            { return proto.CompactTextString(m) }
func (*ConnectionSyncRequest) ProtoMessage()               {}
func (*ConnectionSyncRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *ConnectionSyncRequest) GetConnProps() *ConnectionProperties {
	if m != nil {
		return m.ConnProps
	}
	return nil
}

// Request for Meta#execute(Meta.ConnectionHandle, list, long)
type ExecuteRequest struct {
	StatementHandle    *StatementHandle `protobuf:"bytes,1,opt,name=statementHandle" json:"statementHandle,omitempty"`
	ParameterValues    []*TypedValue    `protobuf:"bytes,2,rep,name=parameter_values,json=parameterValues" json:"parameter_values,omitempty"`
	MaxRowCount        uint64           `protobuf:"varint,3,opt,name=max_row_count,json=maxRowCount" json:"max_row_count,omitempty"`
	HasParameterValues bool             `protobuf:"varint,4,opt,name=has_parameter_values,json=hasParameterValues" json:"has_parameter_values,omitempty"`
}

func (m *ExecuteRequest) Reset()                    { *m = ExecuteRequest{} }
func (m *ExecuteRequest) String() string            { return proto.CompactTextString(m) }
func (*ExecuteRequest) ProtoMessage()               {}
func (*ExecuteRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *ExecuteRequest) GetStatementHandle() *StatementHandle {
	if m != nil {
		return m.StatementHandle
	}
	return nil
}

func (m *ExecuteRequest) GetParameterValues() []*TypedValue {
	if m != nil {
		return m.ParameterValues
	}
	return nil
}

type SyncResultsRequest struct {
	ConnectionId string      `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	StatementId  uint32      `protobuf:"varint,2,opt,name=statement_id,json=statementId" json:"statement_id,omitempty"`
	State        *QueryState `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	Offset       uint64      `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
}

func (m *SyncResultsRequest) Reset()                    { *m = SyncResultsRequest{} }
func (m *SyncResultsRequest) String() string            { return proto.CompactTextString(m) }
func (*SyncResultsRequest) ProtoMessage()               {}
func (*SyncResultsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *SyncResultsRequest) GetState() *QueryState {
	if m != nil {
		return m.State
	}
	return nil
}

// Request to invoke a commit on a Connection
type CommitRequest struct {
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
}

func (m *CommitRequest) Reset()                    { *m = CommitRequest{} }
func (m *CommitRequest) String() string            { return proto.CompactTextString(m) }
func (*CommitRequest) ProtoMessage()               {}
func (*CommitRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

// Request to invoke rollback on a Connection
type RollbackRequest struct {
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
}

func (m *RollbackRequest) Reset()                    { *m = RollbackRequest{} }
func (m *RollbackRequest) String() string            { return proto.CompactTextString(m) }
func (*RollbackRequest) ProtoMessage()               {}
func (*RollbackRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func init() {
	proto.RegisterType((*CatalogsRequest)(nil), "CatalogsRequest")
	proto.RegisterType((*DatabasePropertyRequest)(nil), "DatabasePropertyRequest")
	proto.RegisterType((*SchemasRequest)(nil), "SchemasRequest")
	proto.RegisterType((*TablesRequest)(nil), "TablesRequest")
	proto.RegisterType((*TableTypesRequest)(nil), "TableTypesRequest")
	proto.RegisterType((*ColumnsRequest)(nil), "ColumnsRequest")
	proto.RegisterType((*TypeInfoRequest)(nil), "TypeInfoRequest")
	proto.RegisterType((*PrepareAndExecuteRequest)(nil), "PrepareAndExecuteRequest")
	proto.RegisterType((*PrepareRequest)(nil), "PrepareRequest")
	proto.RegisterType((*FetchRequest)(nil), "FetchRequest")
	proto.RegisterType((*CreateStatementRequest)(nil), "CreateStatementRequest")
	proto.RegisterType((*CloseStatementRequest)(nil), "CloseStatementRequest")
	proto.RegisterType((*OpenConnectionRequest)(nil), "OpenConnectionRequest")
	proto.RegisterType((*CloseConnectionRequest)(nil), "CloseConnectionRequest")
	proto.RegisterType((*ConnectionSyncRequest)(nil), "ConnectionSyncRequest")
	proto.RegisterType((*ExecuteRequest)(nil), "ExecuteRequest")
	proto.RegisterType((*SyncResultsRequest)(nil), "SyncResultsRequest")
	proto.RegisterType((*CommitRequest)(nil), "CommitRequest")
	proto.RegisterType((*RollbackRequest)(nil), "RollbackRequest")
}

var fileDescriptor1 = []byte{
	// 730 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x56, 0x4b, 0x6f, 0xd3, 0x40,
	0x10, 0x96, 0x9b, 0xf4, 0x91, 0xc9, 0xa3, 0xa9, 0xfb, 0x20, 0x2a, 0x97, 0xd4, 0x08, 0xa9, 0x07,
	0xb0, 0x50, 0xa9, 0x4a, 0x55, 0x09, 0x24, 0x30, 0x45, 0x54, 0xe2, 0x11, 0x9c, 0x8a, 0xab, 0xb5,
	0xd9, 0x6c, 0x5a, 0xab, 0xf6, 0xae, 0xeb, 0x5d, 0xb7, 0xcd, 0x2f, 0x81, 0x0b, 0xbf, 0x80, 0xbf,
	0xc3, 0x89, 0x33, 0x3f, 0x84, 0xdd, 0xb5, 0xe3, 0x26, 0x4d, 0x0e, 0x75, 0x55, 0xc4, 0x29, 0x99,
	0x99, 0x6f, 0x5e, 0xdf, 0xee, 0xcc, 0x1a, 0x1a, 0x31, 0x39, 0x4f, 0x08, 0x17, 0xdc, 0x8e, 0x62,
	0x26, 0xd8, 0x66, 0x0d, 0xb3, 0x30, 0x64, 0x34, 0x95, 0xac, 0x3d, 0x58, 0x76, 0x90, 0x40, 0x01,
	0x3b, 0xe1, 0x6e, 0x8a, 0x33, 0x1f, 0x41, 0x1d, 0x33, 0x4a, 0x09, 0x16, 0x3e, 0xa3, 0x9e, 0xdf,
	0x6f, 0x19, 0x6d, 0x63, 0xbb, 0xe2, 0xd6, 0xae, 0x95, 0x47, 0x7d, 0xeb, 0x15, 0x3c, 0x78, 0x2b,
	0xfd, 0x7a, 0x88, 0x93, 0x4e, 0xcc, 0x22, 0x12, 0x8b, 0x61, 0x21, 0xff, 0x0b, 0x68, 0x74, 0xf1,
	0x29, 0x09, 0x51, 0x9e, 0xb6, 0x05, 0x8b, 0x38, 0xad, 0x24, 0x73, 0x18, 0x89, 0xe6, 0x63, 0x68,
	0x70, 0x8d, 0xf5, 0x22, 0x24, 0x04, 0x89, 0x69, 0x6b, 0x4e, 0x03, 0xea, 0xa9, 0xb6, 0x93, 0x2a,
	0xa7, 0xf3, 0x96, 0x66, 0xe4, 0xfd, 0x63, 0x40, 0xfd, 0x18, 0xf5, 0x02, 0x72, 0x7f, 0x79, 0x9f,
	0x80, 0x29, 0x54, 0x44, 0x8f, 0xa2, 0x90, 0xe4, 0xd0, 0x34, 0x79, 0x53, 0x5b, 0x3e, 0x49, 0xc3,
	0x08, 0xfd, 0x10, 0x2a, 0x62, 0x18, 0x11, 0x2f, 0xf0, 0xb9, 0x68, 0x95, 0xdb, 0x25, 0x09, 0x5a,
	0x52, 0x8a, 0x0f, 0x52, 0x36, 0x2d, 0xa8, 0x9f, 0x22, 0xee, 0x5d, 0x03, 0x16, 0x64, 0x94, 0x25,
	0xb7, 0x2a, 0x95, 0xc7, 0x23, 0xcc, 0x54, 0x9b, 0x8b, 0x33, 0xda, 0xdc, 0x87, 0x15, 0xdd, 0xa5,
	0xf2, 0x2a, 0x76, 0xb0, 0xbf, 0x0c, 0x68, 0x38, 0x2c, 0x48, 0x42, 0xfa, 0xbf, 0x18, 0xb2, 0x61,
	0x15, 0xeb, 0x02, 0x26, 0xe1, 0x65, 0x0d, 0x5f, 0x49, 0x4d, 0xe3, 0xf8, 0xa9, 0xb6, 0xe6, 0x67,
	0xb4, 0x25, 0xef, 0xb9, 0xe2, 0xe2, 0x88, 0x0e, 0x58, 0x21, 0x3a, 0xbe, 0x1b, 0xd0, 0xea, 0xc4,
	0x24, 0x42, 0x31, 0x79, 0x4d, 0xfb, 0x87, 0x57, 0x04, 0x27, 0x82, 0x14, 0x89, 0x60, 0x36, 0xa1,
	0xc4, 0xcf, 0x83, 0x8c, 0x18, 0xf5, 0x57, 0x9d, 0x72, 0x88, 0xae, 0xbc, 0x98, 0x5d, 0x7a, 0x98,
	0x25, 0x54, 0x68, 0x26, 0xca, 0x6e, 0x55, 0x2a, 0x5d, 0x76, 0xe9, 0x28, 0x95, 0xb9, 0x05, 0x35,
	0x2e, 0x90, 0x20, 0x21, 0xa1, 0x42, 0x45, 0x56, 0xdd, 0xd7, 0xdd, 0x6a, 0xae, 0x93, 0xa5, 0x9d,
	0x41, 0x23, 0xab, 0xec, 0xdf, 0xd7, 0x63, 0xfd, 0x30, 0xa0, 0xf6, 0x8e, 0x08, 0x7c, 0x5a, 0x28,
	0xd7, 0xcd, 0x2e, 0xe6, 0xa6, 0xba, 0x30, 0x37, 0x60, 0x81, 0x0d, 0x06, 0x9c, 0x8c, 0xb2, 0x66,
	0x92, 0xf9, 0x14, 0x56, 0x07, 0x2a, 0x9f, 0x37, 0x59, 0x5a, 0xca, 0x43, 0x53, 0x9b, 0x3e, 0x8e,
	0xd5, 0xf7, 0x12, 0x36, 0x9c, 0x98, 0xc8, 0xb0, 0xdd, 0x51, 0xec, 0x42, 0xc7, 0xec, 0xc1, 0xba,
	0x13, 0x30, 0x7e, 0x37, 0xef, 0x5b, 0xb4, 0x69, 0xfd, 0x34, 0x60, 0xfd, 0x73, 0x44, 0xa8, 0x93,
	0xfb, 0x15, 0xca, 0xb0, 0x0b, 0x65, 0x5f, 0x5e, 0x5d, 0x19, 0xb9, 0xb4, 0x5d, 0xdd, 0x69, 0xdb,
	0x33, 0x43, 0xd9, 0xea, 0x76, 0x1f, 0x52, 0x11, 0x0f, 0x5d, 0x8d, 0xde, 0x7c, 0x01, 0x95, 0x5c,
	0xa5, 0xce, 0xfd, 0x8c, 0x0c, 0xb3, 0xe8, 0xea, 0xaf, 0xb9, 0x06, 0xf3, 0x17, 0x28, 0x48, 0x48,
	0x76, 0x17, 0x52, 0xe1, 0x60, 0x6e, 0xdf, 0xd0, 0x6c, 0x2a, 0x3a, 0xee, 0x56, 0xad, 0x15, 0x4b,
	0x36, 0x73, 0xb9, 0x3b, 0xa4, 0xb8, 0x60, 0xaf, 0xa0, 0x64, 0x4f, 0x3e, 0x50, 0x11, 0xd7, 0xb5,
	0x55, 0x77, 0xd6, 0xed, 0xeb, 0x80, 0xd9, 0x7b, 0xe3, 0xcb, 0xc5, 0x56, 0x51, 0x40, 0x25, 0x73,
	0xeb, 0xb7, 0xdc, 0x5b, 0x37, 0xc6, 0xf3, 0x00, 0x96, 0xf3, 0x23, 0x78, 0x8f, 0x68, 0x3f, 0x20,
	0x3a, 0x5f, 0x75, 0xa7, 0x69, 0x77, 0x27, 0xf5, 0xee, 0x4d, 0xa0, 0xb9, 0x07, 0x4d, 0x39, 0x59,
	0x72, 0xcb, 0xc8, 0x15, 0xe3, 0x69, 0x62, 0x78, 0x46, 0x7e, 0xd5, 0x56, 0x8b, 0xa4, 0xff, 0x55,
	0xe9, 0xdc, 0xe5, 0x1c, 0xa4, 0x65, 0x7e, 0xab, 0xd9, 0x7e, 0x06, 0x6b, 0x6a, 0xcb, 0x4f, 0xc5,
	0x2f, 0xeb, 0x65, 0x6f, 0x4a, 0x5b, 0x67, 0x32, 0xaa, 0xf5, 0xcd, 0x00, 0x33, 0xe5, 0x91, 0x27,
	0x81, 0xe0, 0xf7, 0x3d, 0x83, 0x5b, 0x30, 0xaf, 0x45, 0x5d, 0xac, 0xea, 0xf0, 0x4b, 0x42, 0xe2,
	0xa1, 0xe6, 0xc8, 0x4d, 0x2d, 0x63, 0x63, 0x5a, 0x1e, 0x1f, 0x53, 0x6b, 0x17, 0xea, 0x8e, 0xfc,
	0x9e, 0xf0, 0x8b, 0x8d, 0x9b, 0xdc, 0xc6, 0x2e, 0x0b, 0x82, 0x1e, 0xc2, 0x67, 0x45, 0xfc, 0xde,
	0x58, 0xd0, 0x66, 0xf1, 0x89, 0x8d, 0x22, 0x24, 0xdf, 0x17, 0x1b, 0xa3, 0x00, 0xfb, 0x82, 0xd8,
	0xe8, 0x02, 0x09, 0x1f, 0xa3, 0xf4, 0x8b, 0xa6, 0xb7, 0xa0, 0x7f, 0x9e, 0xff, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0x79, 0x42, 0x3a, 0x25, 0xf8, 0x08, 0x00, 0x00,
}
